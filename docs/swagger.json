{
    "swagger": "2.0",
    "info": {
        "description": "API для бэкенд приложения \"Фильмотека\" для стажировки в VK по направлению Go-разработка.",
        "title": "Filmoteka API",
        "contact": {
            "name": "Nikita Shlyakhtin",
            "url": "https://t.me/NikitaShlyakhtin",
            "email": "nikitshliahtin@mail.ru"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/actors": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieves a list of all actors in the database. Each entry includes the actor's full name, gender, birth date, and a list of movies they have appeared in. If the actor doesn't appear in any movies, the list will be empty.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Get actors",
                "responses": {
                    "200": {
                        "description": "Actors data",
                        "schema": {
                            "$ref": "#/definitions/main.ActorsEnvelope"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Adds a new actor to the database. The request body should include the actor's full name, gender, and birth date. Once the actor is added, he can be associated with movies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Add new actor",
                "parameters": [
                    {
                        "description": "Actor data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ActorInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Actor successfully created",
                        "schema": {
                            "$ref": "#/definitions/main.ActorEnvelope"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            }
        },
        "/actors/{id}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieves information about specific actor from the database, including actor's full name, gender, birth date, and a list of movies IDs he have appeared in. If the actor doesn't appear in any movies, the list will be empty.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Get actor by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Actor data",
                        "schema": {
                            "$ref": "#/definitions/main.ActorEnvelope"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Actor not found",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Deletes a specific actor from the database. All information about the actor, including their full name, gender, birth date, and list of movies, will be permanently removed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Delete actor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Actor successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/main.MessageEnvelope"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Actor not found",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Updates the information of a specific actor in the database. This can be a partial or full update. If a field is not provided in the request body, the current value of that field will be retained.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "summary": "Update actor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Actor data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ActorInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Actor successfully updated",
                        "schema": {
                            "$ref": "#/definitions/main.ActorEnvelope"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Actor not found",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "Check the health status of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Healthcheck"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthCheckResponse"
                        }
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieves a list of all movies in the database. Each entry includes the movie's title, description, release date, rating, and a list of actor IDs. The result can be sorted by title, rating, or release date, in ascending or descending order. The default sort order is by rating in descending order.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get all movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort order: title, rating, release_date, -title, -rating, -release_date",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of movies",
                        "schema": {
                            "$ref": "#/definitions/main.MoviesEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Adds a new movie to the database. The request body should include the movie's title, description, release date, rating, and a list of actor IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Add a new movie",
                "parameters": [
                    {
                        "description": "Movie data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MovieInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Movie successfully created",
                        "schema": {
                            "$ref": "#/definitions/main.MovieEnvelope"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a specific movie, including its title, description, release date, rating, and a list of actor IDs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie data",
                        "schema": {
                            "$ref": "#/definitions/main.MovieEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Deletes a specific movie from the database. All information about the movie, including its title, description, release date, rating, and list of actor IDs, will be permanently removed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Delete a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion message",
                        "schema": {
                            "$ref": "#/definitions/main.MessageEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Updates the information of a specific movie in the database. This can be a partial or full update. If a field is not provided in the request body, the current value of that field will be retained.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Update a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Movie data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MovieInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie successfully updated",
                        "schema": {
                            "$ref": "#/definitions/main.MovieEnvelope"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Searches for movies by part of the title or actor name. The query parameters should include the title and/or actor.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search for movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Actor name",
                        "name": "actor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of movies",
                        "schema": {
                            "$ref": "#/definitions/main.MoviesEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/main.UserEnvelope"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.Actor": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "description": "RFC3339",
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "data.Movie": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "release_date": {
                    "description": "RFC3339",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "data.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "main.ActorEnvelope": {
            "type": "object",
            "properties": {
                "actor": {
                    "$ref": "#/definitions/data.Actor"
                }
            }
        },
        "main.ActorInput": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "description": "RFC3339",
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                }
            }
        },
        "main.ActorsEnvelope": {
            "type": "object",
            "properties": {
                "actor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.Actor"
                    }
                }
            }
        },
        "main.CreateUserInput": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "main.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "system_info": {
                    "type": "object",
                    "properties": {
                        "environment": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "main.MessageEnvelope": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "main.MovieEnvelope": {
            "type": "object",
            "properties": {
                "movie": {
                    "$ref": "#/definitions/data.Movie"
                }
            }
        },
        "main.MovieInput": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "release_date": {
                    "description": "RFC3339",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.MoviesEnvelope": {
            "type": "object",
            "properties": {
                "movie": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.Movie"
                    }
                }
            }
        },
        "main.UserEnvelope": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/data.User"
                }
            }
        },
        "main.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}